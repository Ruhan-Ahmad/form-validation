{"version":3,"sources":["MyComponents/Login.js","MyComponents/Signup.js","MyComponents/Header.js","MyComponents/Info.js","App.js","reportWebVitals.js","index.js"],"names":["validationSchema","yup","email","required","password","Login","formik","useFormik","initialValues","className","onSubmit","handleSubmit","TextField","label","name","id","margin","value","values","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","variant","firstName","matches","lastName","min","confirmePassword","oneOf","Signup","Header","to","exact","Info","style","minHeight","onInit","Typewriter","typeString","start","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac528f08.chunk.js","sourcesContent":["import React from 'react';\r\nimport {TextField } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport * as yup from 'yup';\r\nimport {useFormik } from 'formik';\r\n\r\nconst validationSchema =yup.object({\r\n    email: yup.string().required(\"Email is required\").email(\"Enter a Valid Email\"),\r\n    password: yup.string().required(),\r\n});\r\nexport const Login = () => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\"\r\n        },\r\n        validationSchema: validationSchema\r\n    });\r\n    return (\r\n        <div className=\"container\">\r\n        <div className=\"m-5 row\">\r\n            <form onSubmit ={formik.handleSubmit}>\r\n                <TextField\r\n                className=\"col-md-4\"\r\n                label=\"Enter Email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                margin=\"normal\"\r\n                value ={formik.values.email}\r\n                onChange ={formik.handleChange}\r\n                error ={formik.touched.email && Boolean(formik.errors.email)}\r\n                helperText ={formik.touched.email && formik.errors.email}\r\n                />\r\n                <br />\r\n                <TextField\r\n                className=\"col-md-4\"\r\n                type=\"password\"\r\n                label=\"Enter Password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                margin=\"normal\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n                error ={formik.touched.password && Boolean(formik.errors.password)}\r\n                helperText ={formik.touched.password && formik.errors.password}\r\n                />\r\n                <br />\r\n                <Button type=\"submit\" variant=\"outlined\" className=\"my-2\">LOGIN</Button>\r\n            </form>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {useFormik} from 'formik';\r\nimport * as yup from 'yup';\r\nconst validationSchema = yup.object({\r\n    firstName: yup.string().required(\"First Name is rquired\").matches(/^[A-Za-z ]*$/, 'Please enter valid First name'),\r\n    lastName: yup.string().required(\"Last Name is required\").matches(/^[A-Za-z ]*$/, 'Please enter valid Last name'),\r\n    email: yup.string().email(\"Enter a Valid Email\").required(\"Email is required\"),\r\n    password:yup.string().required(\"Password is required\").min(8,\"Password Must be 8 Digit Long\"),\r\n    confirmePassword:yup.string().required(\"Confirm Password is required\").min(8,\"Password Must be 8 Digit Long\")\r\n    .oneOf([yup.ref('password'), null], \"Password Must Match\")\r\n    \r\n})\r\nexport const Signup = () => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmePassword: \"\"\r\n        },\r\n        validationSchema: validationSchema\r\n    });\r\n    return (\r\n        <div className='m-5'>\r\n        <div className=\"row\">\r\n            <form onSubmit={formik.handleSubmit}>\r\n            <TextField\r\n                id=\"firstName\"\r\n                name=\"firstName\"\r\n                label=\"Enter First Name\"\r\n                className=\"col-md-4\"\r\n                margin=\"normal\"\r\n                value={formik.values.firstName}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.firstName && Boolean(formik.errors.firstName)}\r\n                helperText={formik.touched.firstName && formik.errors.firstName}\r\n            />\r\n            <TextField\r\n                id=\"lastName\"\r\n                name=\"lastName\"\r\n                label=\"Enter Last Name\"\r\n                className=\"mx-md-4 col-md-4\"\r\n                margin=\"normal\"\r\n                value={formik.values.lastName}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.lastName && Boolean(formik.errors.lastName)}\r\n                helperText={formik.touched.lastName && formik.errors.lastName}\r\n            />\r\n            <TextField\r\n                id=\"email\"\r\n                name=\"email\"\r\n                label=\"Enter Email\"\r\n                className=\"col-md-8\"\r\n                margin=\"normal\"\r\n                value={formik.values.email}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                helperText={formik.touched.email && formik.errors.email}\r\n            />\r\n            <br />\r\n            <TextField\r\n                id=\"password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                label=\"Enter Password\"\r\n                className=\"col-md-4\"\r\n                margin=\"normal\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.password && Boolean(formik.errors.password)}\r\n                helperText={formik.touched.password && formik.errors.password}\r\n            />\r\n            <TextField\r\n                id=\"confirmePassword\"\r\n                type=\"password\"\r\n                name=\"confirmePassword\"\r\n                label=\"Enter Password Again\"\r\n                className=\"mx-md-4 col-md-4\"\r\n                margin=\"normal\"\r\n                value ={formik.values.confirmePassword}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.confirmePassword && Boolean(formik.errors.confirmePassword)}\r\n                helperText={formik.touched.confirmePassword && formik.errors.confirmePassword}\r\n                \r\n            />\r\n            <br />\r\n            <Button type=\"submit\" variant=\"outlined\" className=\"my-2\">SIGNUP</Button>\r\n            </form>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                    <div className=\"container-fluid\">\r\n                        <NavLink className=\"navbar-brand\" to=\"/\">Form-Validation</NavLink>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav mx-auto mb-2 mb-lg-0\">\r\n                                <li className=\"nav-item px-2\">\r\n                                    <NavLink exact className=\"nav-link\" aria-current=\"page\" to=\"/\">SignUp</NavLink>\r\n                                </li>\r\n                                <li className=\"nav-item px-2\">\r\n                                    <NavLink exact className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n                                </li>\r\n                                <li className=\"nav-item px-2\">\r\n                                    <NavLink exact className=\"nav-link\" to=\"/info\">Info</NavLink>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Typewriter from 'typewriter-effect';\r\n\r\nexport const Info = () => {\r\n    let infoStyle = {\r\n        minHeight: '91.5vh',\r\n    }\r\n    return (\r\n        <div style={infoStyle} className=\"bg-success text-light p-5\">\r\n            <Typewriter onInit={(Typewriter)=>{\r\n                Typewriter\r\n                .typeString(\"This is form validation done by formik and yup together, to show how form validate data before sen it to server. You can visit my github for more info about other cool works\")\r\n                .start()\r\n            }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle.min.js';\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport {Login} from './MyComponents/Login';\nimport {Signup} from './MyComponents/Signup';\nimport {Header} from './MyComponents/Header';\nimport {Info} from './MyComponents/Info';\n\nfunction App() {\n  return (\n    <>\n    <Header />\n        <Switch>\n            <Route exact path=\"/\">\n            <Signup/>\n            </Route>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/info\">\n            <Info />\n          </Route>\n        </Switch>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n    <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}